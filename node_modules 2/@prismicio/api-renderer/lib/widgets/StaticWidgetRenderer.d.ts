import { GroupContent, NestableContent } from "@prismicio/types-internal/lib/content";
import type { Group as GroupField, NestableWidget } from "@prismicio/types-internal/lib/customtypes";
import type { RenderContext, Renderer } from "../models";
import { GroupOrField } from "../models/fetch";
declare const StaticWidgetRenderer: (ctx: RenderContext) => Renderer<NestableWidget | GroupField, NestableContent | GroupContent, GroupOrField> & {
    renderObjectOfStaticWidgetV1(content: Array<[string, NestableContent | GroupContent]> | Record<string, NestableContent | GroupContent>, fetch: Record<string, GroupOrField> | undefined): object;
    renderObjectOfStaticWidgetV2(content: Array<[string, NestableContent | GroupContent]> | Record<string, NestableContent | GroupContent>, fetch: Record<string, GroupOrField> | undefined, fieldsDef: Record<string, NestableWidget | GroupField>, renderIfUndefined: {
        withFetch: "default" | "filter";
    }, renderIfNull: {
        default: "default" | "render" | "filter";
        withFetch: "default" | "filter";
        withFetchField: "default" | "render" | "filter";
    }): Record<string, unknown>;
    renderObjectOfStaticWidgetMocks(content: Array<[string, NestableContent | GroupContent]> | Record<string, NestableContent | GroupContent>, fieldsDef: Record<string, NestableWidget | GroupField>): Record<string, unknown>;
};
export default StaticWidgetRenderer;
