import * as os from "os";
import { TextEncoder } from "util";
import { ServerRuntimeClient } from './../_node_modules/@sentry/core/esm/server-runtime-client.js';
import { SDK_VERSION } from './../_node_modules/@sentry/core/esm/version.js';
class NodeClient extends ServerRuntimeClient {
  /**
   * Creates a new Node SDK instance.
   * @param options Configuration options for this SDK.
   */
  constructor(options) {
    options._metadata = options._metadata || {};
    options._metadata.sdk = options._metadata.sdk || {
      name: "sentry.javascript.node",
      packages: [
        {
          name: "npm:@sentry/node",
          version: SDK_VERSION
        }
      ],
      version: SDK_VERSION
    };
    options.transportOptions = {
      textEncoder: new TextEncoder(),
      ...options.transportOptions
    };
    const clientOptions = {
      ...options,
      platform: "node",
      runtime: { name: "node", version: global.process.version },
      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname()
    };
    super(clientOptions);
  }
}
export {
  NodeClient
};
//# sourceMappingURL=client.js.map
