{"version":3,"file":"sdk.js","sources":["../../../../../../../node_modules/@sentry/node/esm/sdk.js"],"sourcesContent":["import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { Integrations, getMainCarrier, getIntegrationsToSetup, initAndBind, getCurrentHub } from '@sentry/core';\nimport { createStackParser, nodeStackLineParser, stackParserFromStackParserOptions, GLOBAL_OBJ, tracingContextFromHeaders } from '@sentry/utils';\nimport { setNodeAsyncContextStrategy } from './async/index.js';\nimport { NodeClient } from './client.js';\nimport { Console } from './integrations/console.js';\nimport { Http } from './integrations/http.js';\nimport { OnUncaughtException } from './integrations/onuncaughtexception.js';\nimport { OnUnhandledRejection } from './integrations/onunhandledrejection.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Modules } from './integrations/modules.js';\nimport { ContextLines } from './integrations/contextlines.js';\nimport { Context } from './integrations/context.js';\nimport { RequestData } from './integrations/requestdata.js';\nimport { LocalVariables } from './integrations/localvariables.js';\nimport { Undici } from './integrations/undici/index.js';\nimport { getModuleFromFilename } from './module.js';\nimport { makeNodeTransport } from './transports/http.js';\n\n/* eslint-disable max-lines */\n\nconst defaultIntegrations = [\n  // Common\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  // Native Wrappers\n  new Console(),\n  new Http(),\n  new Undici(),\n  // Global Handlers\n  new OnUncaughtException(),\n  new OnUnhandledRejection(),\n  // Event Info\n  new ContextLines(),\n  new LocalVariables(),\n  new Context(),\n  new Modules(),\n  new RequestData(),\n  // Misc\n  new LinkedErrors(),\n];\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/node');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link NodeOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  const carrier = getMainCarrier();\n\n  setNodeAsyncContextStrategy();\n\n  const autoloadedIntegrations = _optionalChain([carrier, 'access', _ => _.__SENTRY__, 'optionalAccess', _2 => _2.integrations]) || [];\n\n  options.defaultIntegrations =\n    options.defaultIntegrations === false\n      ? []\n      : [\n          ...(Array.isArray(options.defaultIntegrations) ? options.defaultIntegrations : defaultIntegrations),\n          ...autoloadedIntegrations,\n        ];\n\n  if (options.dsn === undefined && process.env.SENTRY_DSN) {\n    options.dsn = process.env.SENTRY_DSN;\n  }\n\n  const sentryTracesSampleRate = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (options.tracesSampleRate === undefined && sentryTracesSampleRate) {\n    const tracesSampleRate = parseFloat(sentryTracesSampleRate);\n    if (isFinite(tracesSampleRate)) {\n      options.tracesSampleRate = tracesSampleRate;\n    }\n  }\n\n  if (options.release === undefined) {\n    const detectedRelease = getSentryRelease();\n    if (detectedRelease !== undefined) {\n      options.release = detectedRelease;\n    } else {\n      // If release is not provided, then we should disable autoSessionTracking\n      options.autoSessionTracking = false;\n    }\n  }\n\n  if (options.environment === undefined && process.env.SENTRY_ENVIRONMENT) {\n    options.environment = process.env.SENTRY_ENVIRONMENT;\n  }\n\n  if (options.autoSessionTracking === undefined && options.dsn !== undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  if (options.instrumenter === undefined) {\n    options.instrumenter = 'sentry';\n  }\n\n  // TODO(v7): Refactor this to reduce the logic above\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeNodeTransport,\n  };\n\n  initAndBind(options.clientClass || NodeClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  updateScopeFromEnvVariables();\n}\n\n/**\n * Function that takes an instance of NodeClient and checks if autoSessionTracking option is enabled for that client\n */\nfunction isAutoSessionTrackingEnabled(client) {\n  if (client === undefined) {\n    return false;\n  }\n  const clientOptions = client && client.getOptions();\n  if (clientOptions && clientOptions.autoSessionTracking !== undefined) {\n    return clientOptions.autoSessionTracking;\n  }\n  return false;\n}\n\n/**\n * Returns a release dynamically from environment variables.\n */\nfunction getSentryRelease(fallback) {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (GLOBAL_OBJ.SENTRY_RELEASE && GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  return (\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env.GITHUB_SHA ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env.COMMIT_REF ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env.VERCEL_GIT_COMMIT_SHA ||\n    process.env.VERCEL_GITHUB_COMMIT_SHA ||\n    process.env.VERCEL_GITLAB_COMMIT_SHA ||\n    process.env.VERCEL_BITBUCKET_COMMIT_SHA ||\n    // Zeit (now known as Vercel)\n    process.env.ZEIT_GITHUB_COMMIT_SHA ||\n    process.env.ZEIT_GITLAB_COMMIT_SHA ||\n    process.env.ZEIT_BITBUCKET_COMMIT_SHA ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nconst defaultStackParser = createStackParser(nodeStackLineParser(getModuleFromFilename));\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking() {\n  const hub = getCurrentHub();\n  hub.startSession();\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The 'beforeExit' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on('beforeExit', () => {\n    const session = hub.getScope().getSession();\n    const terminalStates = ['exited', 'crashed'];\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // \"When a session is moved away from ok it must not be updated anymore.\"\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && !terminalStates.includes(session.status)) hub.endSession();\n  });\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables() {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || '').toLowerCase();\n  if (!['false', 'n', 'no', 'off', '0'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const { propagationContext } = tracingContextFromHeaders(sentryTraceEnv, baggageEnv);\n    getCurrentHub().getScope().setPropagationContext(propagationContext);\n  }\n}\n\nexport { defaultIntegrations, defaultStackParser, getSentryRelease, init, isAutoSessionTrackingEnabled };\n//# sourceMappingURL=sdk.js.map\n"],"names":["Integrations.InboundFilters","Integrations.FunctionToString"],"mappings":"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","x_google_ignoreList":[0]}