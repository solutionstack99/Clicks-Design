import { posix, sep } from "path";
const isWindowsPlatform = sep === "\\";
function normalizeWindowsPath(path) {
  return path.replace(/^[A-Z]:/, "").replace(/\\/g, "/");
}
function getModuleFromFilename(filename, normalizeWindowsPathSeparator = isWindowsPlatform) {
  if (!filename) {
    return;
  }
  const normalizedFilename = normalizeWindowsPathSeparator ? normalizeWindowsPath(filename) : filename;
  let { root, dir, base: basename, ext } = posix.parse(normalizedFilename);
  const base = require && require.main && require.main.filename && dir || global.process.cwd();
  const normalizedBase = `${base}/`;
  let file = basename;
  if (ext === ".js") {
    file = file.slice(0, file.length - ".js".length);
  }
  if (!root && !dir) {
    dir = ".";
  }
  let n = dir.lastIndexOf("/node_modules/");
  if (n > -1) {
    return `${dir.slice(n + 14).replace(/\//g, ".")}:${file}`;
  }
  n = `${dir}/`.lastIndexOf(normalizedBase, 0);
  if (n === 0) {
    let moduleName = dir.slice(normalizedBase.length).replace(/\//g, ".");
    if (moduleName) {
      moduleName += ":";
    }
    moduleName += file;
    return moduleName;
  }
  return file;
}
export {
  getModuleFromFilename
};
//# sourceMappingURL=module.js.map
