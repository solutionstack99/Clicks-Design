{"version":3,"file":"modules.js","sources":["../../../../../../../../node_modules/@sentry/node/esm/integrations/modules.js"],"sourcesContent":["import { existsSync, readFileSync } from 'fs';\nimport { dirname, join } from 'path';\n\nlet moduleCache;\n\n/** Extract information about paths */\nfunction getPaths() {\n  try {\n    return require.cache ? Object.keys(require.cache ) : [];\n  } catch (e) {\n    return [];\n  }\n}\n\n/** Extract information about package.json modules */\nfunction collectModules()\n\n {\n  const mainPaths = (require.main && require.main.paths) || [];\n  const paths = getPaths();\n  const infos\n\n = {};\n  const seen\n\n = {};\n\n  paths.forEach(path => {\n    let dir = path;\n\n    /** Traverse directories upward in the search of package.json file */\n    const updir = () => {\n      const orig = dir;\n      dir = dirname(orig);\n\n      if (!dir || orig === dir || seen[orig]) {\n        return undefined;\n      }\n      if (mainPaths.indexOf(dir) < 0) {\n        return updir();\n      }\n\n      const pkgfile = join(orig, 'package.json');\n      seen[orig] = true;\n\n      if (!existsSync(pkgfile)) {\n        return updir();\n      }\n\n      try {\n        const info = JSON.parse(readFileSync(pkgfile, 'utf8'))\n\n;\n        infos[info.name] = info.version;\n      } catch (_oO) {\n        // no-empty\n      }\n    };\n\n    updir();\n  });\n\n  return infos;\n}\n\n/** Add node modules / packages to the event */\nclass Modules  {constructor() { Modules.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Modules';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Modules.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      if (!getCurrentHub().getIntegration(Modules)) {\n        return event;\n      }\n      return {\n        ...event,\n        modules: {\n          ...event.modules,\n          ...this._getModules(),\n        },\n      };\n    });\n  }\n\n  /** Fetches the list of modules and the versions loaded by the entry file for your node.js app. */\n   _getModules() {\n    if (!moduleCache) {\n      moduleCache = collectModules();\n    }\n    return moduleCache;\n  }\n} Modules.__initStatic();\n\nexport { Modules };\n//# sourceMappingURL=modules.js.map\n"],"names":[],"mappings":";;AAGA,IAAI;AAGJ,SAAS,WAAW;AAClB,MAAI;AACF,WAAO,QAAQ,QAAQ,OAAO,KAAK,QAAQ,KAAO,IAAG;EACtD,SAAQ,GAAP;AACA,WAAO;EACR;AACH;AAGA,SAAS,iBAER;AACC,QAAM,YAAa,QAAQ,QAAQ,QAAQ,KAAK,SAAU;AAC1D,QAAM,QAAQ;AACd,QAAM,QAEL;AACD,QAAM,OAEL;AAED,QAAM,QAAQ,UAAQ;AACpB,QAAI,MAAM;AAGV,UAAM,QAAQ,MAAM;AAClB,YAAM,OAAO;AACb,YAAM,QAAQ,IAAI;AAElB,UAAI,CAAC,OAAO,SAAS,OAAO,KAAK,IAAI,GAAG;AACtC,eAAO;AAAA,MACR;AACD,UAAI,UAAU,QAAQ,GAAG,IAAI,GAAG;AAC9B,eAAO,MAAK;AAAA,MACb;AAED,YAAM,UAAU,KAAK,MAAM,cAAc;AACzC,WAAK,IAAI,IAAI;AAEb,UAAI,CAAC,WAAW,OAAO,GAAG;AACxB,eAAO,MAAK;AAAA,MACb;AAED,UAAI;AACF,cAAM,OAAO,KAAK,MAAM,aAAa,SAAS,MAAM,CAAC;AAGrD,cAAM,KAAK,IAAI,IAAI,KAAK;AAAA,MACzB,SAAQ,KAAP;AAAA,MAED;AAAA,IACP;AAEI;EACJ,CAAG;AAED,SAAO;AACT;AAGA,MAAM,QAAS;AAAA,EAAC,cAAc;AAAE,YAAQ,UAAU,OAAO,KAAK,IAAI;AAAA,EAAI;AAAA;AAAA;AAAA;AAAA,EAInE,OAAO,eAAe;AAAC,SAAK,KAAK;AAAA,EAAU;AAAA;AAAA;AAAA;AAAA,EAK3C,SAAS;AAAC,SAAK,OAAO,QAAQ;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAKjC,UAAU,yBAAyB,eAAe;AACjD,4BAAwB,WAAS;AAC/B,UAAI,CAAC,cAAa,EAAG,eAAe,OAAO,GAAG;AAC5C,eAAO;AAAA,MACR;AACD,aAAO;AAAA,QACL,GAAG;AAAA,QACH,SAAS;AAAA,UACP,GAAG,MAAM;AAAA,UACT,GAAG,KAAK,YAAa;AAAA,QACtB;AAAA,MACT;AAAA,IACA,CAAK;AAAA,EACF;AAAA;AAAA,EAGA,cAAc;AACb,QAAI,CAAC,aAAa;AAChB,oBAAc,eAAc;AAAA,IAC7B;AACD,WAAO;AAAA,EACR;AACH;AAAE,QAAQ,aAAc;","x_google_ignoreList":[0]}