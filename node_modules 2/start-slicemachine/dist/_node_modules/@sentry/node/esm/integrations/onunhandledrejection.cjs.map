{"version":3,"file":"onunhandledrejection.cjs","sources":["../../../../../../../../node_modules/@sentry/node/esm/integrations/onunhandledrejection.js"],"sourcesContent":["import { getCurrentHub } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\nimport { logAndExitProcess } from './utils/errorhandling.js';\n\n/** Global Promise Rejection handler */\nclass OnUnhandledRejection  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'OnUnhandledRejection';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = OnUnhandledRejection.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n      _options\n\n = { mode: 'warn' },\n  ) {this._options = _options;OnUnhandledRejection.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    global.process.on('unhandledRejection', this.sendUnhandledPromise.bind(this));\n  }\n\n  /**\n   * Send an exception with reason\n   * @param reason string\n   * @param promise promise\n   */\n   sendUnhandledPromise(reason, promise) {\n    const hub = getCurrentHub();\n    if (hub.getIntegration(OnUnhandledRejection)) {\n      hub.withScope((scope) => {\n        scope.setExtra('unhandledPromiseRejection', true);\n        hub.captureException(reason, {\n          originalException: promise,\n          data: { mechanism: { handled: false, type: 'onunhandledrejection' } },\n        });\n      });\n    }\n    this._handleRejection(reason);\n  }\n\n  /**\n   * Handler for `mode` option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _handleRejection(reason) {\n    // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n    const rejectionWarning =\n      'This error originated either by ' +\n      'throwing inside of an async function without a catch block, ' +\n      'or by rejecting a promise which was not handled with .catch().' +\n      ' The promise rejected with the reason:';\n\n    /* eslint-disable no-console */\n    if (this._options.mode === 'warn') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        console.error(reason && reason.stack ? reason.stack : reason);\n      });\n    } else if (this._options.mode === 'strict') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n      });\n      logAndExitProcess(reason);\n    }\n    /* eslint-enable no-console */\n  }\n} OnUnhandledRejection.__initStatic();\n\nexport { OnUnhandledRejection };\n//# sourceMappingURL=onunhandledrejection.js.map\n"],"names":["hub","getCurrentHub","consoleSandbox","logAndExitProcess"],"mappings":";;;;;AAKA,MAAM,qBAAsB;AAAA;AAAA;AAAA;AAAA,EAIzB,OAAO,eAAe;AAAC,SAAK,KAAK;AAAA,EAAuB;AAAA;AAAA;AAAA;AAAA,EAKxD,SAAS;AAAC,SAAK,OAAO,qBAAqB;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAK9C,YACG,WAEH,EAAE,MAAM,OAAQ,GACf;AAAC,SAAK,WAAW;AAAS,yBAAqB,UAAU,OAAO,KAAK,IAAI;AAAA,EAAE;AAAA;AAAA;AAAA;AAAA,EAK5E,YAAY;AACX,WAAO,QAAQ,GAAG,sBAAsB,KAAK,qBAAqB,KAAK,IAAI,CAAC;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,QAAQ,SAAS;AACrC,UAAMA,QAAMC,IAAAA;AACZ,QAAID,MAAI,eAAe,oBAAoB,GAAG;AAC5CA,YAAI,UAAU,CAAC,UAAU;AACvB,cAAM,SAAS,6BAA6B,IAAI;AAChDA,cAAI,iBAAiB,QAAQ;AAAA,UAC3B,mBAAmB;AAAA,UACnB,MAAM,EAAE,WAAW,EAAE,SAAS,OAAO,MAAM,yBAA0B;AAAA,QAC/E,CAAS;AAAA,MACT,CAAO;AAAA,IACF;AACD,SAAK,iBAAiB,MAAM;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiB,QAAQ;AAExB,UAAM,mBACJ;AAMF,QAAI,KAAK,SAAS,SAAS,QAAQ;AACjCE,aAAAA,eAAe,MAAM;AACnB,gBAAQ,KAAK,gBAAgB;AAE7B,gBAAQ,MAAM,UAAU,OAAO,QAAQ,OAAO,QAAQ,MAAM;AAAA,MACpE,CAAO;AAAA,IACF,WAAU,KAAK,SAAS,SAAS,UAAU;AAC1CA,aAAAA,eAAe,MAAM;AACnB,gBAAQ,KAAK,gBAAgB;AAAA,MACrC,CAAO;AACDC,oBAAiB,kBAAC,MAAM;AAAA,IACzB;AAAA,EAEF;AACH;AAAE,qBAAqB,aAAc;;","x_google_ignoreList":[0]}