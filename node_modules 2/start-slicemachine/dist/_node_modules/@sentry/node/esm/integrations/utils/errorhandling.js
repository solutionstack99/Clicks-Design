import { getCurrentHub } from './../../../_node_modules/@sentry/core/esm/hub.js';
import { logger } from './../../../_node_modules/@sentry/utils/esm/logger.js';
const DEFAULT_SHUTDOWN_TIMEOUT = 2e3;
function logAndExitProcess(error) {
  console.error(error);
  const client = getCurrentHub().getClient();
  if (client === void 0) {
    (typeof __SENTRY_DEBUG__ === "undefined" || __SENTRY_DEBUG__) && logger.warn("No NodeClient was defined, we are exiting the process now.");
    global.process.exit(1);
  }
  const options = client.getOptions();
  const timeout = options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout || DEFAULT_SHUTDOWN_TIMEOUT;
  client.close(timeout).then(
    (result) => {
      if (!result) {
        (typeof __SENTRY_DEBUG__ === "undefined" || __SENTRY_DEBUG__) && logger.warn("We reached the timeout for emptying the request buffer, still exiting now!");
      }
      global.process.exit(1);
    },
    (error2) => {
      (typeof __SENTRY_DEBUG__ === "undefined" || __SENTRY_DEBUG__) && logger.error(error2);
    }
  );
}
export {
  logAndExitProcess
};
//# sourceMappingURL=errorhandling.js.map
