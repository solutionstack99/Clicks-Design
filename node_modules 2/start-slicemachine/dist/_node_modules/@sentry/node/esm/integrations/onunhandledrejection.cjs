"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const errorhandling = require("./utils/errorhandling.cjs");
const hub = require('./../../_node_modules/@sentry/core/esm/hub.cjs');
const logger = require('./../../_node_modules/@sentry/utils/esm/logger.cjs');
class OnUnhandledRejection {
  /**
   * @inheritDoc
   */
  static __initStatic() {
    this.id = "OnUnhandledRejection";
  }
  /**
   * @inheritDoc
   */
  __init() {
    this.name = OnUnhandledRejection.id;
  }
  /**
   * @inheritDoc
   */
  constructor(_options = { mode: "warn" }) {
    this._options = _options;
    OnUnhandledRejection.prototype.__init.call(this);
  }
  /**
   * @inheritDoc
   */
  setupOnce() {
    global.process.on("unhandledRejection", this.sendUnhandledPromise.bind(this));
  }
  /**
   * Send an exception with reason
   * @param reason string
   * @param promise promise
   */
  sendUnhandledPromise(reason, promise) {
    const hub$1 = hub.getCurrentHub();
    if (hub$1.getIntegration(OnUnhandledRejection)) {
      hub$1.withScope((scope) => {
        scope.setExtra("unhandledPromiseRejection", true);
        hub$1.captureException(reason, {
          originalException: promise,
          data: { mechanism: { handled: false, type: "onunhandledrejection" } }
        });
      });
    }
    this._handleRejection(reason);
  }
  /**
   * Handler for `mode` option
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _handleRejection(reason) {
    const rejectionWarning = "This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason:";
    if (this._options.mode === "warn") {
      logger.consoleSandbox(() => {
        console.warn(rejectionWarning);
        console.error(reason && reason.stack ? reason.stack : reason);
      });
    } else if (this._options.mode === "strict") {
      logger.consoleSandbox(() => {
        console.warn(rejectionWarning);
      });
      errorhandling.logAndExitProcess(reason);
    }
  }
}
OnUnhandledRejection.__initStatic();
exports.OnUnhandledRejection = OnUnhandledRejection;
//# sourceMappingURL=onunhandledrejection.cjs.map
