"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const util = require("util");
const instrument = require('./../../_node_modules/@sentry/utils/esm/instrument.cjs');
const hub = require('./../../_node_modules/@sentry/core/esm/hub.cjs');
const severity = require('./../../_node_modules/@sentry/utils/esm/severity.cjs');
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const util__namespace = /* @__PURE__ */ _interopNamespaceDefault(util);
class Console {
  constructor() {
    Console.prototype.__init.call(this);
  }
  /**
   * @inheritDoc
   */
  static __initStatic() {
    this.id = "Console";
  }
  /**
   * @inheritDoc
   */
  __init() {
    this.name = Console.id;
  }
  /**
   * @inheritDoc
   */
  setupOnce() {
    instrument.addInstrumentationHandler("console", ({ args, level }) => {
      const hub$1 = hub.getCurrentHub();
      if (!hub$1.getIntegration(Console)) {
        return;
      }
      hub$1.addBreadcrumb(
        {
          category: "console",
          level: severity.severityLevelFromString(level),
          message: util__namespace.format.apply(void 0, args)
        },
        {
          input: [...args],
          level
        }
      );
    });
  }
}
Console.__initStatic();
exports.Console = Console;
//# sourceMappingURL=console.cjs.map
