{"version":3,"file":"localvariables.js","sources":["../../../../../../../../node_modules/@sentry/node/esm/integrations/localvariables.js"],"sourcesContent":["import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger } from '@sentry/utils';\nimport { LRUMap } from 'lru_map';\nimport { NODE_VERSION } from '../nodeVersion.js';\n\n/** Creates a container for callbacks to be called sequentially */\nfunction createCallbackList(complete) {\n  // A collection of callbacks to be executed last to first\n  let callbacks = [];\n\n  let completedCalled = false;\n  function checkedComplete(result) {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn) {\n    callbacks.push(fn);\n  }\n\n  function next(result) {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession  {\n\n  /** Throws if inspector API is not available */\n   constructor() {\n    /*\n    TODO: We really should get rid of this require statement below for a couple of reasons:\n    1. It makes the integration unusable in the SvelteKit SDK, as it's not possible to use `require`\n       in SvelteKit server code (at least not by default).\n    2. Throwing in a constructor is bad practice\n\n    More context for a future attempt to fix this:\n    We already tried replacing it with import but didn't get it to work because of async problems.\n    We still called import in the constructor but assigned to a promise which we \"awaited\" in\n    `configureAndConnect`. However, this broke the Node integration tests as no local variables\n    were reported any more. We probably missed a place where we need to await the promise, too.\n    */\n\n    // Node can be built without inspector support so this can throw\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Session } = require('inspector');\n    this._session = new Session();\n  }\n\n  /** @inheritdoc */\n   configureAndConnect(onPause, captureAll) {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n   getLocalVariables(objectId, complete) {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList(complete);\n\n      for (const prop of props) {\n        if (_optionalChain([prop, 'optionalAccess', _2 => _2.value, 'optionalAccess', _3 => _3.objectId]) && _optionalChain([prop, 'optionalAccess', _4 => _4.value, 'access', _5 => _5.className]) === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _6 => _6.value, 'optionalAccess', _7 => _7.objectId]) && _optionalChain([prop, 'optionalAccess', _8 => _8.value, 'optionalAccess', _9 => _9.className]) === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _10 => _10.value, 'optionalAccess', _11 => _11.value]) || _optionalChain([prop, 'optionalAccess', _12 => _12.value, 'optionalAccess', _13 => _13.description])) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n   _getProperties(objectId, next) {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n   _unrollArray(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => _optionalChain([v, 'optionalAccess', _14 => _14.value, 'optionalAccess', _15 => _15.value]));\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n   _unrollObject(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map(v => [v.name, _optionalChain([v, 'optionalAccess', _16 => _16.value, 'optionalAccess', _17 => _17.value])])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} );\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n   _unrollOther(prop, vars, next) {\n    if (_optionalChain([prop, 'optionalAccess', _18 => _18.value, 'optionalAccess', _19 => _19.value])) {\n      vars[prop.name] = prop.value.value;\n    } else if (_optionalChain([prop, 'optionalAccess', _20 => _20.value, 'optionalAccess', _21 => _21.description]) && _optionalChain([prop, 'optionalAccess', _22 => _22.value, 'optionalAccess', _23 => _23.type]) !== 'function') {\n      vars[prop.name] = `<${prop.value.description}>`;\n    }\n\n    next(vars);\n  }\n}\n\n/**\n * When using Vercel pkg, the inspector module is not available.\n * https://github.com/getsentry/sentry-javascript/issues/6769\n */\nfunction tryNewAsyncSession() {\n  try {\n    return new AsyncSession();\n  } catch (e) {\n    return undefined;\n  }\n}\n\n// Add types for the exception event data\n\n/** Could this be an anonymous function? */\nfunction isAnonymous(name) {\n  return name !== undefined && ['', '?', '<anonymous>'].includes(name);\n}\n\n/** Do the function names appear to match? */\nfunction functionNamesMatch(a, b) {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\n/** Creates a unique hash from stack frames */\nfunction hashFrames(frames) {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nfunction hashFromStack(stackParser, stack) {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\n/**\n * Adds local variables to exception frames\n */\nclass LocalVariables  {\n   static __initStatic() {this.id = 'LocalVariables';}\n\n    __init() {this.name = LocalVariables.id;}\n\n    __init2() {this._cachedFrames = new LRUMap(20);}\n\n   constructor(\n      _options = {},\n      _session = tryNewAsyncSession(),\n  ) {this._options = _options;this._session = _session;LocalVariables.prototype.__init.call(this);LocalVariables.prototype.__init2.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    this._setup(addGlobalEventProcessor, _optionalChain([getCurrentHub, 'call', _24 => _24(), 'access', _25 => _25.getClient, 'call', _26 => _26(), 'optionalAccess', _27 => _27.getOptions, 'call', _28 => _28()]));\n  }\n\n  /** Setup in a way that's easier to call from tests */\n   _setup(\n    addGlobalEventProcessor,\n    clientOptions,\n  ) {\n    if (this._session && _optionalChain([clientOptions, 'optionalAccess', _29 => _29.includeLocalVariables])) {\n      // Only setup this integration if the Node version is >= v18\n      // https://github.com/getsentry/sentry-javascript/issues/7697\n      const unsupportedNodeVersion = (NODE_VERSION.major || 0) < 18;\n\n      if (unsupportedNodeVersion) {\n        logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n        return;\n      }\n\n      this._session.configureAndConnect(\n        (ev, complete) =>\n          this._handlePaused(clientOptions.stackParser, ev , complete),\n        !!this._options.captureAllExceptions,\n      );\n\n      addGlobalEventProcessor(async event => this._addLocalVariables(event));\n    }\n  }\n\n  /**\n   * Handle the pause event\n   */\n   _handlePaused(\n    stackParser,\n    { params: { reason, data, callFrames } },\n    complete,\n  ) {\n    if (reason !== 'exception' && reason !== 'promiseRejection') {\n      complete();\n      return;\n    }\n\n    // data.description contains the original error.stack\n    const exceptionHash = hashFromStack(stackParser, _optionalChain([data, 'optionalAccess', _30 => _30.description]));\n\n    if (exceptionHash == undefined) {\n      complete();\n      return;\n    }\n\n    const { add, next } = createCallbackList(frames => {\n      this._cachedFrames.set(exceptionHash, frames);\n      complete();\n    });\n\n    // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n    // For this reason we only attempt to get local variables for the first 5 frames\n    for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n      const { scopeChain, functionName, this: obj } = callFrames[i];\n\n      const localScope = scopeChain.find(scope => scope.type === 'local');\n\n      // obj.className is undefined in ESM modules\n      const fn = obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n      if (_optionalChain([localScope, 'optionalAccess', _31 => _31.object, 'access', _32 => _32.objectId]) === undefined) {\n        add(frames => {\n          frames[i] = { function: fn };\n          next(frames);\n        });\n      } else {\n        const id = localScope.object.objectId;\n        add(frames =>\n          _optionalChain([this, 'access', _33 => _33._session, 'optionalAccess', _34 => _34.getLocalVariables, 'call', _35 => _35(id, vars => {\n            frames[i] = { function: fn, vars };\n            next(frames);\n          })]),\n        );\n      }\n    }\n\n    next([]);\n  }\n\n  /**\n   * Adds local variables event stack frames.\n   */\n   _addLocalVariables(event) {\n    for (const exception of _optionalChain([event, 'optionalAccess', _36 => _36.exception, 'optionalAccess', _37 => _37.values]) || []) {\n      this._addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  /**\n   * Adds local variables to the exception stack frames.\n   */\n   _addLocalVariablesToException(exception) {\n    const hash = hashFrames(_optionalChain([exception, 'optionalAccess', _38 => _38.stacktrace, 'optionalAccess', _39 => _39.frames]));\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // delete is identical to get but also removes the entry from the cache\n    const cachedFrames = this._cachedFrames.delete(hash);\n\n    if (cachedFrames === undefined) {\n      return;\n    }\n\n    const frameCount = _optionalChain([exception, 'access', _40 => _40.stacktrace, 'optionalAccess', _41 => _41.frames, 'optionalAccess', _42 => _42.length]) || 0;\n\n    for (let i = 0; i < frameCount; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frameCount - i - 1;\n\n      // Drop out if we run out of frames to match up\n      if (!_optionalChain([exception, 'optionalAccess', _43 => _43.stacktrace, 'optionalAccess', _44 => _44.frames, 'optionalAccess', _45 => _45[frameIndex]]) || !cachedFrames[i]) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrames[i].vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        exception.stacktrace.frames[frameIndex].in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(exception.stacktrace.frames[frameIndex].function, cachedFrames[i].function)\n      ) {\n        continue;\n      }\n\n      exception.stacktrace.frames[frameIndex].vars = cachedFrames[i].vars;\n    }\n  }\n}LocalVariables.__initStatic();\n\nexport { LocalVariables, createCallbackList };\n//# sourceMappingURL=localvariables.js.map\n"],"names":["LRUMap"],"mappings":"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","x_google_ignoreList":[0]}