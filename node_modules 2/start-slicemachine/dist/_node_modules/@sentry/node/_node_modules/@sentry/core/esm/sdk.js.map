{"version":3,"file":"sdk.js","sources":["../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/core/esm/sdk.js"],"sourcesContent":["import { logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n"],"names":[],"mappings":";;AAYA,SAAS,YACP,aACA,SACA;AACA,MAAI,QAAQ,UAAU,MAAM;AAC1B,QAAK,OAAO,qBAAqB,eAAe,kBAAmB;AACjE,aAAO,OAAM;AAAA,IACnB,OAAW;AAGL,cAAQ,KAAK,8EAA8E;AAAA,IAC5F;AAAA,EACF;AACD,QAAM,MAAM;AACZ,QAAM,QAAQ,IAAI;AAClB,QAAM,OAAO,QAAQ,YAAY;AAEjC,QAAM,SAAS,IAAI,YAAY,OAAO;AACtC,MAAI,WAAW,MAAM;AACvB;","x_google_ignoreList":[0]}