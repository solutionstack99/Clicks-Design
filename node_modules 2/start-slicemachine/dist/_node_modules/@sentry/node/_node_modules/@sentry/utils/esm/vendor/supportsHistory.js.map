{"version":3,"file":"supportsHistory.js","sources":["../../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/utils/esm/vendor/supportsHistory.js"],"sourcesContent":["import { getGlobalObject } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n"],"names":[],"mappings":";AAKA,MAAM,SAAS,gBAAe;AAQ9B,SAAS,kBAAkB;AAMzB,QAAM,SAAU,OAAS;AACzB,QAAM,sBAAsB,UAAU,OAAO,OAAO,OAAO,IAAI;AAE/D,QAAM,gBAAgB,aAAa,UAAU,CAAC,CAAC,OAAO,QAAQ,aAAa,CAAC,CAAC,OAAO,QAAQ;AAE5F,SAAO,CAAC,uBAAuB;AACjC;","x_google_ignoreList":[0]}