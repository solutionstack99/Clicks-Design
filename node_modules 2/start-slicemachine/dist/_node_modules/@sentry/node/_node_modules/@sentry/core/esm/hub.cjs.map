{"version":3,"file":"hub.cjs","sources":["../../../../../../../../../../node_modules/@sentry/node/node_modules/@sentry/core/esm/hub.js"],"sourcesContent":["import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      const client = this.getClient();\n      if (!client) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n"],"names":["scope","Scope","uuid4","dateTimestampInSeconds","consoleSandbox","logger","session","closeSession","DEFAULT_ENVIRONMENT","GLOBAL_OBJ","makeSession","updateSession","getGlobalSingleton"],"mappings":"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","x_google_ignoreList":[0]}