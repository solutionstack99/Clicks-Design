"use strict";
const _commonjsHelpers = require("../../../_virtual/_commonjsHelpers.cjs");
const parseProxyResponse$1 = require("../../../_virtual/parse-proxy-response.cjs");
const browser = require("../../debug/src/browser.cjs");
var __importDefault = _commonjsHelpers.commonjsGlobal && _commonjsHelpers.commonjsGlobal.__importDefault || function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(parseProxyResponse$1.__exports, "__esModule", { value: true });
const debug_1 = __importDefault(browser.browserExports);
const debug = debug_1.default("https-proxy-agent:parse-proxy-response");
function parseProxyResponse(socket) {
  return new Promise((resolve, reject) => {
    let buffersLength = 0;
    const buffers = [];
    function read() {
      const b = socket.read();
      if (b)
        ondata(b);
      else
        socket.once("readable", read);
    }
    function cleanup() {
      socket.removeListener("end", onend);
      socket.removeListener("error", onerror);
      socket.removeListener("close", onclose);
      socket.removeListener("readable", read);
    }
    function onclose(err) {
      debug("onclose had error %o", err);
    }
    function onend() {
      debug("onend");
    }
    function onerror(err) {
      cleanup();
      debug("onerror %o", err);
      reject(err);
    }
    function ondata(b) {
      buffers.push(b);
      buffersLength += b.length;
      const buffered = Buffer.concat(buffers, buffersLength);
      const endOfHeaders = buffered.indexOf("\r\n\r\n");
      if (endOfHeaders === -1) {
        debug("have not received end of HTTP headers yet...");
        read();
        return;
      }
      const firstLine = buffered.toString("ascii", 0, buffered.indexOf("\r\n"));
      const statusCode = +firstLine.split(" ")[1];
      debug("got proxy server response: %o", firstLine);
      resolve({
        statusCode,
        buffered
      });
    }
    socket.on("error", onerror);
    socket.on("close", onclose);
    socket.on("end", onend);
    read();
  });
}
parseProxyResponse$1.__exports.default = parseProxyResponse;
//# sourceMappingURL=parse-proxy-response.cjs.map
